@page "/dashboard"
@rendermode InteractiveServer

@using MWA.Models
@using MWA.Services
@using MWA.DBConnections
@using Microsoft.AspNetCore.Components.Authorization
@inject WeatherService WeatherService
@inject MongoHelper MongoHelper
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthProvider
@inject Supabase.Client supabase
@using Supabase.Gotrue;

<h2 class="dashboard-title">Your Favorite Cities</h2>

@if (!isAuthenticated)
{
    <p class="login-warning">Please log in first to use Dashboard.</p>
}
else if (isLoading)
{
    <p>Loading your saved cities...</p>
}
else if (favoriteWeatherList.Count == 0)
{
    <p>You have no favorite cities saved.</p>
}
else
{
    <div class="dashboard-grid">
        @foreach (var item in favoriteWeatherList)
        {
            <div class="weather-card">
                <h3>@item.CityName</h3>
                <p>@item.Weather.Main - @item.Weather.Description</p>
                <p>Temp: @item.Weather.TemperatureÂ°C</p>
                <p>Humidity: @item.Weather.Humidity%</p>
                <p>Wind: @item.Weather.WindSpeed m/s</p>
            </div>
        }
    </div>
}

@code {
    private bool isAuthenticated = false;
    private bool isLoading = true;

    private string userId = string.Empty;
    private List<FavoriteCity> favoriteCities = new();
    private List<(string CityName, WeatherResponse Weather)> favoriteWeatherList = new();

    protected override async Task OnInitializedAsync()
    {
        var session = supabase.Auth.CurrentSession;
        isAuthenticated = session?.User != null;

        if (!isAuthenticated || session.User?.Id == null)
        {
            isLoading = false;
            return;
        }

        userId = session?.User?.Id ?? string.Empty;

        try
        {
            favoriteCities = await MongoHelper.GetFavoriteCitiesAsync(userId);
            foreach (var fav in favoriteCities)
            {
                var weather = await WeatherService.GetWeatherDataAsync(fav.CityName);
                if (weather != null)
                {
                    favoriteWeatherList.Add((fav.CityName, weather));
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading favorite cities: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }
}